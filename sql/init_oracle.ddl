-- Generated by Oracle SQL Developer Data Modeler 20.4.0.374.0801
--   at:        2021-04-06 18:55:38 EDT
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE alsm_aut_book (
    id     NUMBER(10) NOT NULL,
    autid  NUMBER(10) NOT NULL,
    isbn   NUMBER(10) NOT NULL
);

COMMENT ON COLUMN alsm_aut_book.id IS
    'Unique identification for each pair of one author and one book';

ALTER TABLE alsm_aut_book ADD CONSTRAINT alsm_aut_book_pk PRIMARY KEY ( id );

CREATE TABLE alsm_aut_invite (
    inv_id    NUMBER(10) NOT NULL,
    autid     NUMBER(10),
    event_id  NUMBER(10)
);

COMMENT ON COLUMN alsm_aut_invite.inv_id IS
    'Unique Invitation Identification number';

ALTER TABLE alsm_aut_invite ADD CONSTRAINT alsm_aut_invite_pk PRIMARY KEY ( inv_id );

CREATE TABLE alsm_author (
    autid     NUMBER(10) NOT NULL,
    a_fname   VARCHAR2(20) NOT NULL,
    a_lname   VARCHAR2(20) NOT NULL,
    house_no  VARCHAR2(5) NOT NULL,
    street    VARCHAR2(20) NOT NULL,
    city      VARCHAR2(20) NOT NULL,
    state     VARCHAR2(20) NOT NULL,
    zipcode   NUMBER(5) NOT NULL,
    a_email   VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN alsm_author.autid IS
    'Unique ID number for each each author';

COMMENT ON COLUMN alsm_author.a_fname IS
    'Author''s First Name
';

COMMENT ON COLUMN alsm_author.a_lname IS
    'Author''s Last Name';

COMMENT ON COLUMN alsm_author.house_no IS
    'Author''s Residential House Number';

COMMENT ON COLUMN alsm_author.street IS
    'Author''s Street Address';

COMMENT ON COLUMN alsm_author.city IS
    'Author''s city';

COMMENT ON COLUMN alsm_author.state IS
    'Author''s living State name';

COMMENT ON COLUMN alsm_author.zipcode IS
    'Author''s residential zipcode';

COMMENT ON COLUMN alsm_author.a_email IS
    'Author''s email ID';

ALTER TABLE alsm_author ADD CONSTRAINT alsm_author_pk PRIMARY KEY ( autid );

CREATE TABLE alsm_book (
    isbn     NUMBER(10) NOT NULL,
    bname    VARCHAR2(30) NOT NULL,
    topicid  NUMBER(10) NOT NULL
);

COMMENT ON COLUMN alsm_book.isbn IS
    'Unique number given to each book';

COMMENT ON COLUMN alsm_book.bname IS
    'The title name of the book';

ALTER TABLE alsm_book ADD CONSTRAINT alsm_book_pk PRIMARY KEY ( isbn );

CREATE TABLE alsm_book_copy (
    copy_id  NUMBER(10) NOT NULL,
    isbn     NUMBER(10) NOT NULL,
    status   VARCHAR2(10) NOT NULL
);

COMMENT ON COLUMN alsm_book_copy.copy_id IS
    'Unique Identification number for each book copy';

COMMENT ON COLUMN alsm_book_copy.status IS
    'Status of the copy. Either available or on rent.';

ALTER TABLE alsm_book_copy ADD CONSTRAINT alsm_book_copy_pk PRIMARY KEY ( copy_id );

CREATE TABLE alsm_customer (
    custid   NUMBER(5) NOT NULL,
    c_fname  VARCHAR2(20) NOT NULL,
    c_lname  VARCHAR2(20) NOT NULL,
    contact  NUMBER(10) NOT NULL,
    c_email  VARCHAR2(30) NOT NULL,
    id_type  VARCHAR2(10) NOT NULL,
    id_num   NUMBER(10) NOT NULL
);

COMMENT ON COLUMN alsm_customer.custid IS
    'Unique ID given to each customer';

COMMENT ON COLUMN alsm_customer.c_fname IS
    'Customer''s first name';

COMMENT ON COLUMN alsm_customer.c_lname IS
    'Customer''s Last Name';

COMMENT ON COLUMN alsm_customer.contact IS
    'Customer''s phone number';

COMMENT ON COLUMN alsm_customer.c_email IS
    'Customer''s Email ID';

COMMENT ON COLUMN alsm_customer.id_type IS
    'Type of Identification document. Passport or SSN or Driver License.';

COMMENT ON COLUMN alsm_customer.id_num IS
    'Unique number given to each ID document';

ALTER TABLE alsm_customer ADD CONSTRAINT alsm_customer_pk PRIMARY KEY ( custid );

CREATE TABLE alsm_custregistration (
    regid     NUMBER(10) NOT NULL,
    event_id  NUMBER(10) NOT NULL,
    custid    NUMBER(5)
);

ALTER TABLE alsm_custregistration ADD CONSTRAINT alsm_custregistration_pk PRIMARY KEY ( regid );

CREATE TABLE alsm_event (
    event_id    NUMBER(10) NOT NULL,
    event_name  VARCHAR2(20) NOT NULL,
    event_type  VARCHAR2(15) NOT NULL,
    startdate   DATE NOT NULL,
    stopdate    DATE NOT NULL,
    topicid     NUMBER(10) NOT NULL
);

ALTER TABLE alsm_event
    ADD CONSTRAINT ch_inh_alsm_event CHECK ( event_type IN ( 'ALSM_Event', 'ALSM_Exhibition', 'ALSM_Seminar' ) );

COMMENT ON COLUMN alsm_event.event_id IS
    'Unique Identifiaction number to each event';

COMMENT ON COLUMN alsm_event.event_name IS
    'Event''s Name';

COMMENT ON COLUMN alsm_event.event_type IS
    'Event Type: Seminar or Exhibition';

COMMENT ON COLUMN alsm_event.startdate IS
    'The day and time event started';

COMMENT ON COLUMN alsm_event.stopdate IS
    'The day and time the event ended or is expected to end.';

ALTER TABLE alsm_event ADD CONSTRAINT alsm_event_pk PRIMARY KEY ( event_id );

CREATE TABLE alsm_exhibition (
    event_id      NUMBER(10) NOT NULL,
    exb_expenses  NUMBER(10) NOT NULL
);

COMMENT ON COLUMN alsm_exhibition.event_id IS
    'Unique Identifiaction number to each event';

COMMENT ON COLUMN alsm_exhibition.exb_expenses IS
    'Expenses of the exhibition';

ALTER TABLE alsm_exhibition ADD CONSTRAINT alsm_exhibition_pk PRIMARY KEY ( event_id );

CREATE TABLE alsm_individual (
    sponid  NUMBER(10) NOT NULL,
    f_name  VARCHAR2(20) NOT NULL,
    l_name  VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN alsm_individual.sponid IS
    'Unique ID number given to each sponsor';

COMMENT ON COLUMN alsm_individual.f_name IS
    'Individual sponsor''s First Name	';

COMMENT ON COLUMN alsm_individual.l_name IS
    'Individual Sponsor''s Last Name';

ALTER TABLE alsm_individual ADD CONSTRAINT alsm_individual_pk PRIMARY KEY ( sponid );

CREATE TABLE alsm_invoice (
    inv_id    NUMBER(10) NOT NULL,
    inv_date  DATE,
    amount    NUMBER(8, 2),
    pay_mthd  VARCHAR2(10),
    bor_id    NUMBER(10)
);

COMMENT ON COLUMN alsm_invoice.inv_id IS
    'Unique identification number for each invoice';

COMMENT ON COLUMN alsm_invoice.inv_date IS
    'The date invoice was generated';

COMMENT ON COLUMN alsm_invoice.amount IS
    'The total amount customer pays to the library';

COMMENT ON COLUMN alsm_invoice.pay_mthd IS
    'Method of payment used by customer';

ALTER TABLE alsm_invoice ADD CONSTRAINT alsm_invoice_pk PRIMARY KEY ( inv_id );

CREATE TABLE alsm_organisation (
    sponid  NUMBER(10) NOT NULL,
    name    VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN alsm_organisation.sponid IS
    'Unique ID number given to each sponsor';

COMMENT ON COLUMN alsm_organisation.name IS
    'Organisation''s full name';

ALTER TABLE alsm_organisation ADD CONSTRAINT alsm_organisation_pk PRIMARY KEY ( sponid );

CREATE TABLE alsm_rentals (
    bor_id     NUMBER(10) NOT NULL,
    bor_date   DATE NOT NULL,
    exp_rdate  DATE NOT NULL,
    act_rdate  DATE,
    copy_id    NUMBER(10),
    custid     NUMBER(5)
);

COMMENT ON COLUMN alsm_rentals.bor_id IS
    'Unique ID to each borrow activity';

COMMENT ON COLUMN alsm_rentals.bor_date IS
    'The date a copy of book was borrowed';

COMMENT ON COLUMN alsm_rentals.exp_rdate IS
    'The date a copy of book is expected to be returned';

COMMENT ON COLUMN alsm_rentals.act_rdate IS
    'The date a copy of book was actually returned';

ALTER TABLE alsm_rentals ADD CONSTRAINT alsm_rentals_pk PRIMARY KEY ( bor_id );

CREATE TABLE alsm_reservation (
    res_id    NUMBER(10) NOT NULL,
    timeslot  DATE NOT NULL,
    custid    NUMBER(5),
    roomid    NUMBER(10) NOT NULL
);

COMMENT ON COLUMN alsm_reservation.res_id IS
    'Unique identification number for each reservation';

COMMENT ON COLUMN alsm_reservation.timeslot IS
    'Date and Time of the reservation';

ALTER TABLE alsm_reservation ADD CONSTRAINT alsm_reservation_pk PRIMARY KEY ( res_id );

CREATE TABLE alsm_sem_sponsor (
    fundid    NUMBER(10) NOT NULL,
    f_amount  NUMBER(8, 2) NOT NULL,
    sponid    NUMBER(10) NOT NULL,
    event_id  NUMBER(10) NOT NULL
);

COMMENT ON COLUMN alsm_sem_sponsor.fundid IS
    'Unique ID rto identify all individual funding details';

COMMENT ON COLUMN alsm_sem_sponsor.f_amount IS
    'Each sponsor''s funding to each event';

ALTER TABLE alsm_sem_sponsor ADD CONSTRAINT alsm_sem_sponsor_pk PRIMARY KEY ( fundid );

CREATE TABLE alsm_seminar (
    event_id NUMBER(10) NOT NULL
);

COMMENT ON COLUMN alsm_seminar.event_id IS
    'Unique Identifiaction number to each event';

ALTER TABLE alsm_seminar ADD CONSTRAINT alsm_seminar_pk PRIMARY KEY ( event_id );

CREATE TABLE alsm_sponsor (
    sponid    NUMBER(10) NOT NULL,
    spontype  VARCHAR2(17) NOT NULL
);

ALTER TABLE alsm_sponsor
    ADD CONSTRAINT ch_inh_alsm_sponsor CHECK ( spontype IN ( 'ALSM_Individual', 'ALSM_Organisation', 'ALSM_Sponsor' ) );

COMMENT ON COLUMN alsm_sponsor.sponid IS
    'Unique ID number given to each sponsor';

COMMENT ON COLUMN alsm_sponsor.spontype IS
    'Type of sponsor: organisation or individual';

ALTER TABLE alsm_sponsor ADD CONSTRAINT alsm_sponsor_pk PRIMARY KEY ( sponid );

CREATE TABLE alsm_studyroom (
    roomid    NUMBER(10) NOT NULL,
    capacity  NUMBER(3) NOT NULL
);

COMMENT ON COLUMN alsm_studyroom.roomid IS
    'Unique room id number ';

COMMENT ON COLUMN alsm_studyroom.capacity IS
    'Maximum capacity of the room';

ALTER TABLE alsm_studyroom ADD CONSTRAINT alsm_studyroom_pk PRIMARY KEY ( roomid );

CREATE TABLE alsm_topic (
    topicid  NUMBER(10) NOT NULL,
    t_name   VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN alsm_topic.topicid IS
    'Unique number to identify topics';

COMMENT ON COLUMN alsm_topic.t_name IS
    'Topic name';

ALTER TABLE alsm_topic ADD CONSTRAINT alsm_topic_pk PRIMARY KEY ( topicid );

ALTER TABLE alsm_aut_invite
    ADD CONSTRAINT alsm_author_fk FOREIGN KEY ( autid )
        REFERENCES alsm_author ( autid );

ALTER TABLE alsm_aut_book
    ADD CONSTRAINT alsm_author_fkv1 FOREIGN KEY ( autid )
        REFERENCES alsm_author ( autid );

ALTER TABLE alsm_aut_book
    ADD CONSTRAINT alsm_book_fk FOREIGN KEY ( isbn )
        REFERENCES alsm_book ( isbn );

ALTER TABLE alsm_book_copy
    ADD CONSTRAINT alsm_book_fkv1 FOREIGN KEY ( isbn )
        REFERENCES alsm_book ( isbn );

ALTER TABLE alsm_rentals
    ADD CONSTRAINT alsm_copy_fk FOREIGN KEY ( copy_id )
        REFERENCES alsm_book_copy ( copy_id );

ALTER TABLE alsm_rentals
    ADD CONSTRAINT alsm_customer_fk FOREIGN KEY ( custid )
        REFERENCES alsm_customer ( custid );

ALTER TABLE alsm_reservation
    ADD CONSTRAINT alsm_customer_fkv1 FOREIGN KEY ( custid )
        REFERENCES alsm_customer ( custid );

ALTER TABLE alsm_custregistration
    ADD CONSTRAINT alsm_customer_fkv2 FOREIGN KEY ( custid )
        REFERENCES alsm_customer ( custid );

ALTER TABLE alsm_event
    ADD CONSTRAINT alsm_event_topic_fk FOREIGN KEY ( topicid )
        REFERENCES alsm_topic ( topicid );

ALTER TABLE alsm_exhibition
    ADD CONSTRAINT alsm_exhibition_event_fk FOREIGN KEY ( event_id )
        REFERENCES alsm_event ( event_id );

ALTER TABLE alsm_custregistration
    ADD CONSTRAINT alsm_exhibition_fk FOREIGN KEY ( event_id )
        REFERENCES alsm_exhibition ( event_id );

ALTER TABLE alsm_individual
    ADD CONSTRAINT alsm_individual_sponsor_fk FOREIGN KEY ( sponid )
        REFERENCES alsm_sponsor ( sponid );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE alsm_organisation
    ADD CONSTRAINT alsm_organisation_alsm_sponsor_fk FOREIGN KEY ( sponid )
        REFERENCES alsm_sponsor ( sponid );

ALTER TABLE alsm_invoice
    ADD CONSTRAINT alsm_rentals_fk FOREIGN KEY ( bor_id )
        REFERENCES alsm_rentals ( bor_id )
            ON DELETE CASCADE;

ALTER TABLE alsm_seminar
    ADD CONSTRAINT alsm_seminar_event_fk FOREIGN KEY ( event_id )
        REFERENCES alsm_event ( event_id );

ALTER TABLE alsm_aut_invite
    ADD CONSTRAINT alsm_seminar_fk FOREIGN KEY ( event_id )
        REFERENCES alsm_seminar ( event_id );

ALTER TABLE alsm_sem_sponsor
    ADD CONSTRAINT alsm_seminar_fkv1 FOREIGN KEY ( event_id )
        REFERENCES alsm_seminar ( event_id );

ALTER TABLE alsm_sem_sponsor
    ADD CONSTRAINT alsm_sponsor_fk FOREIGN KEY ( sponid )
        REFERENCES alsm_sponsor ( sponid );

ALTER TABLE alsm_reservation
    ADD CONSTRAINT alsm_studyroom_fk FOREIGN KEY ( roomid )
        REFERENCES alsm_studyroom ( roomid );

ALTER TABLE alsm_book
    ADD CONSTRAINT alsm_topic_fk FOREIGN KEY ( topicid )
        REFERENCES alsm_topic ( topicid );

CREATE OR REPLACE TRIGGER arc_fkarc_7_alsm_seminar BEFORE
    INSERT OR UPDATE OF event_id ON alsm_seminar
    FOR EACH ROW
DECLARE
    d VARCHAR2(15);
BEGIN
    SELECT
        a.event_type
    INTO d
    FROM
        alsm_event a
    WHERE
        a.event_id = :new.event_id;

    IF ( d IS NULL OR d <> 'ALSM_Seminar' ) THEN
        raise_application_error(-20223,
                               'FK ALSM_Seminar_Event_FK in Table ALSM_Seminar violates Arc constraint on Table ALSM_Event - discriminator column Event_Type doesn''t have value ''ALSM_Seminar''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_7_alsm_exhibition BEFORE
    INSERT OR UPDATE OF event_id ON alsm_exhibition
    FOR EACH ROW
DECLARE
    d VARCHAR2(15);
BEGIN
    SELECT
        a.event_type
    INTO d
    FROM
        alsm_event a
    WHERE
        a.event_id = :new.event_id;

    IF ( d IS NULL OR d <> 'ALSM_Exhibition' ) THEN
        raise_application_error(-20223,
                               'FK ALSM_Exhibition_Event_FK in Table ALSM_Exhibition violates Arc constraint on Table ALSM_Event - discriminator column Event_Type doesn''t have value ''ALSM_Exhibition''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_8_alsm_organisation BEFORE
    INSERT OR UPDATE OF sponid ON alsm_organisation
    FOR EACH ROW
DECLARE
    d VARCHAR2(17);
BEGIN
    SELECT
        a.spontype
    INTO d
    FROM
        alsm_sponsor a
    WHERE
        a.sponid = :new.sponid;

    IF ( d IS NULL OR d <> 'ALSM_Organisation' ) THEN
        raise_application_error(-20223,
                               'FK ALSM_Organisation_ALSM_Sponsor_FK in Table ALSM_Organisation violates Arc constraint on Table ALSM_Sponsor - discriminator column SponType doesn''t have value ''ALSM_Organisation''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_8_alsm_individual BEFORE
    INSERT OR UPDATE OF sponid ON alsm_individual
    FOR EACH ROW
DECLARE
    d VARCHAR2(17);
BEGIN
    SELECT
        a.spontype
    INTO d
    FROM
        alsm_sponsor a
    WHERE
        a.sponid = :new.sponid;

    IF ( d IS NULL OR d <> 'ALSM_Individual' ) THEN
        raise_application_error(-20223,
                               'FK ALSM_Individual_Sponsor_FK in Table ALSM_Individual violates Arc constraint on Table ALSM_Sponsor - discriminator column SponType doesn''t have value ''ALSM_Individual''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            19
-- CREATE INDEX                             0
-- ALTER TABLE                             41
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   1
-- WARNINGS                                 0
