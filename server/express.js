const express = require('express')
const app = express()
const cors = require('cors')
const bodyParser = require('body-parser');
const port = 3000
var mysql = require('mysql');
const { SettingOutlined } = require('@ant-design/icons');

var mysql_con = mysql.createConnection({
    host: "localhost",
    user: "cs6083_general",
    password: "666666",
    database: 'cs6083_project'
});

app.use(cors())
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());
app.use(bodyParser.raw());
//var jsonParser = bodyParser.json()
//var urlencodedParser = bodyParser.urlencoded({ extended: false })

app.post('/api/register', (req, res) => {
  // TODO: Register customer information in the database. 
  // User ID can be parsed from req, it is automaticlaly generated by firebase
    console.log('User register req: ', req.body)
    var uid = 0
    function setuid(value){
      uid = value
      console.log('Set uid: ', uid)
    }
    query = 'insert into alsm_customer (custid, c_fname, c_lname, contact, c_email, crole, id_type, id_num) values (?, ?, ?, ?, ?, ?, ?, ?);'
    const getnewuid = new Promise((resolve, reject) =>{
        mysql_con.query('select max(custid) as maxid from alsm_customer;', (err,result) => {
          newuid = result[0].maxid+1
          resolve(newuid)
        })
      })
    getnewuid.then((data) => {
      //console.log('Reach here! data: ', data)
      mysql_con.query(query, [
        data,
        req.body.cfname,
        req.body.clname, 
        req.body.phone,
        req.body.email,
        req.body.crole,
        req.body.cidtype,
        req.body.cidnum
      ], function (err, result) {
          if (err) throw err;
          console.log("User register sql result: " + result);
      });
    })
})
app.get('/api/currentuser', (req, res) => {
  //TODO: return current customer inforamtion
    console.log('User login req: ', req.body)
    query = 'select * from alsm_customer where c_email = ?;'
    mysql_con.query(query, [req.body.email], function (err, result) {
      if (err) throw err;
      console.log("User login sql result: " + result);
      res.send(req.body)
  });
})
app.post('/api/newauthor', (req, res) => {
  console.log('Express add new author: ', req.body)
  var newautid=1
  const getnewautid = new Promise((resolve, reject) =>{
    mysql_con.query('select max(autid) as maxid from alsm_author;', (err,result) => {
      if(result) 
        newautid = result[0].maxid+1
      else
        newautid=1 
      resolve(newautid)
    })
  }).then((data) => {
    console.log("Adding new author with id: ", data, ' and params: ', req.body)
    query = 'INSERT INTO ALSM_AUTHOR (`autid`, `a_fname`, `a_lname`, `house_no`, `street`, `city`, `state`, `zipcode`, `aemail`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);'
    mysql_con.query(query, [
      data,
      req.body.afname,
      req.body.alname,
      req.body.house,
      req.body.street,
      req.body.city,
      req.body.state,
      req.body.zipcode,
      req.body.email
    ], function (err, result) {
      if (err) throw err;
      console.log("User login sql result: " + result);
      res.send(req.body)
    });
  })
})

app.get('/api/allauthors', (req, res) => {
    console.log('User login req: ', req.body)
    query = 'select autid, a_fname, a_lname from alsm_author;'
    mysql_con.query(query, function (err, result) {
      if (err) throw err;
      console.log("All authors: " + result);
      res.send(result)
  });
})

app.post('/api/newbook/isbn', (req, res) => {
  console.log('New book isbn: ', req.body)
  isbn = 0;
  query = '';
  /*mysql_con.query(query, function (err, result){
    if (err) throw err;
      console.log("New book search isbn: " + result);
      res.send(result)
  })*/
  // TODO: If isbn exist, return the book information. If not, return an empty object.
  authors_ = []
  bnmae_ = ''
  topic_ = ''

  res.send({
    authors: authors_,
    bname: bname_,
    topic: topic_
  })
})
app.get('/', (req, res) => {
    res.send('Hello World!')
})
app.listen(port, () => {
  console.log(`Example app listening at http://localhost:${port}`)
})
